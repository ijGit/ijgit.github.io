{"version":3,"sources":["webpack:///./src/templates/post-page.js"],"names":["Template","data","post","markdownRemark","site","siteData","className","frontmatter","title","date","dangerouslySetInnerHTML","__html","html","postQuery"],"mappings":"2IAAA,qJAce,SAASA,EAAT,GAA0B,IAAPC,EAAM,EAANA,KACVC,EAAQD,EAAvBE,eACAC,EAAQH,EAARG,KAGP,OACE,YAAC,IAAD,CAAQC,SAAUD,GAChB,2BAEA,mBAAKE,UAAU,uBACb,mBAAKA,UAAU,aACb,sBAAKJ,EAAKK,YAAYC,OACtB,wBAAON,EAAKK,YAAYE,MACxB,mBACEH,UAAU,oBACVI,wBAAyB,CAACC,OAAQT,EAAKU,YAS5C,IAAMC,EAAS","file":"component---src-templates-post-page-js-ea4c921b6bab2e3c5e76.js","sourcesContent":["// src/template/post.js\nimport React from 'react';\n\nimport { graphql } from 'gatsby';\nimport { Layout } from '../components/layout/layout'\n\nimport './../styles/code-style.scss'\nimport './../styles/article-style.scss'\n//require(\"prismjs/themes/prism-solarizedlight.css\");\n\n/*\ndata come from graphQL query then can be\nrendered in our template\n*/\nexport default function Template({data}){\n  const {markdownRemark:post} = data; \n  const {site} = data;\n  // const post = data.markdownRemark;\n\n  return (\n    <Layout siteData={site}>\n      <article>\n\n      <div className=\"blog-post-container\">\n        <div className=\"blog-post\">\n          <h1>{post.frontmatter.title}</h1>\n          <span>{post.frontmatter.date}</span>\n          <div\n            className=\"blog-post-content\"\n            dangerouslySetInnerHTML={{__html: post.html}}\n            />\n        </div>\n      </div>\n      </article>\n    </Layout>\n  )\n}\n\nexport const postQuery = graphql`\n  query postQuery($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        url\n      }\n      pathPrefix\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        category\n        tags\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`"],"sourceRoot":""}