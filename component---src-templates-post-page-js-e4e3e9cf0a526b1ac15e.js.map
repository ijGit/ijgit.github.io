{"version":3,"sources":["webpack:///./src/templates/post-page.js"],"names":["Template","post","data","markdownRemark","className","frontmatter","title","date","dangerouslySetInnerHTML","__html","html","postQuery"],"mappings":"6FAAA,kHASe,SAASA,EAAT,GAA0B,IACjBC,EADgB,EAANC,KACzBC,eAGP,OACE,yBAAKC,UAAU,uBACb,yBAAKA,UAAU,aACb,4BAAKH,EAAKI,YAAYC,OACtB,4BAAKL,EAAKI,YAAYE,MACtB,yBACEH,UAAU,oBACVI,wBAAyB,CAACC,OAAQR,EAAKS,UAO1C,IAAMC,EAAS","file":"component---src-templates-post-page-js-e4e3e9cf0a526b1ac15e.js","sourcesContent":["// src/template/post.js\n\nimport { graphql } from 'gatsby';\nimport React from 'react';\n\n/*\ndata come from graphQL query then can be\nrendered in our template\n*/\nexport default function Template({data}){\n  const {markdownRemark:post} = data; \n  // const post = data.markdownRemark;\n\n  return (\n    <div className=\"blog-post-container\">\n      <div className=\"blog-post\">\n        <h1>{post.frontmatter.title}</h1>\n        <h2>{post.frontmatter.date}</h2>\n        <div\n          className=\"blog-post-content\"\n          dangerouslySetInnerHTML={{__html: post.html}}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport const postQuery = graphql`\n  query postQuery($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        categories\n        tags\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`"],"sourceRoot":""}