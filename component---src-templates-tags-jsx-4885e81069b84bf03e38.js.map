{"version":3,"sources":["webpack:///./src/components/tags/tags.jsx","webpack:///./src/templates/tags.jsx","webpack:///./src/components/post-list/post-item.jsx","webpack:///./src/components/post-list/post-list.jsx"],"names":["TagsContainer","styled","div","TagList","tags","map","tag","className","key","BackButton","Tags","data","edges","allMarkdownRemark","title","site","siteMetadata","siteData","id","to","posts","pageQuery","PostRepHeader","h3","PostRepDate","PostRepTags","PostRepExcerpt","PostItem","date","excerpt","slug","Container","List","ul","Item","li","PostList","isSearchpage","node","frontmatter","fields"],"mappings":"4FAAA,wEAGMA,EAAgBC,IAAOC,IAAV,0EAAGD,CAAH,+GAcNE,EAAU,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACxB,OACE,YAACJ,EAAD,KACGI,EAAKC,KAAI,SAAAC,GACR,OAAQ,oBAAMC,UAAU,OAAOC,IAAKF,GAAMA,S,kCCrBlD,kJASMG,EAAaR,IAAOC,IAAV,mEAAGD,CAAH,uBA4CDS,UAzCF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACNC,EAAUD,EAAKE,kBAAfD,MACR,OACE,8BACA,YAAC,IAAD,CAAME,MAAOH,EAAKI,KAAKC,aAAaF,QACpC,YAAC,IAAD,CAAQG,SAAUN,EAAKI,MACnB,uBAASG,GAAG,WACV,YAACT,EAAD,KACE,YAAC,IAAD,CAAMU,GAAG,KAAT,SAGF,YAAC,IAAD,CAAUC,MAAOR,QAgCpB,IAAMS,EAAS,c,oICjDhBC,EAAgBrB,IAAOsB,GAAV,+EAAGtB,CAAH,yCAIbuB,EAAcvB,IAAOC,IAAV,6EAAGD,CAAH,8EAMXwB,EAAcxB,IAAOC,IAAV,6EAAGD,CAAH,+HAcXyB,EAAiBzB,IAAOC,IAAV,gFAAGD,CAAH,mJAaP0B,EAAW,SAAC,GAA0C,IAAxCb,EAAuC,EAAvCA,MAAOV,EAAgC,EAAhCA,KAAMwB,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KACrD,OACE,uBACE,YAACR,EAAD,KACE,YAAC,IAAD,CAAMH,GAAIW,GAAOhB,IAGnB,YAACU,EAAD,CAAajB,UAAU,iBACpBqB,GAGH,YAACH,EAAD,KACE,YAAC,IAAD,CAASrB,KAAMA,KAGjB,YAACsB,EAAD,CAAgBnB,UAAU,oBACvBsB,KCrDHE,EAAY9B,IAAOC,IAAV,uEAAGD,CAAH,yCAIT+B,EAAO/B,IAAOgC,GAAV,kEAAGhC,CAAH,8BAIJiC,EAAOjC,IAAOkC,GAAV,kEAAGlC,CAAH,wCAKGmC,EAAW,SAAC,GAAgC,IAA/BhB,EAA8B,EAA9BA,MAA8B,IAAvBiB,oBAAuB,SAEtD,OACE,YAACN,EAAD,KACE,YAACC,EAAD,KAEIZ,EAAMf,KAAI,SAAAiC,GACRA,EAAOD,EAAcC,EAASA,EAAKA,KACnC,IAAMxB,EAAQuB,EAAcC,EAAKxB,MAAQwB,EAAKC,YAAYzB,MACpDV,EAAOiC,EAAcC,EAAKlC,KAAOkC,EAAKC,YAAYnC,KAClDwB,EAAOS,EAAcC,EAAKV,KAAOU,EAAKC,YAAYX,KAClDE,EAAOO,EAAcC,EAAKR,KAAOQ,EAAKE,OAAOV,KAEnD,OACE,YAACI,EAAD,CAAM1B,IAAOsB,GACX,YAAC,EAAD,CACEhB,MAAOA,EACPV,KAAMA,EACNwB,KAAMA,EACNC,QAASS,EAAKT,QACdC,KAAMA","file":"component---src-templates-tags-jsx-4885e81069b84bf03e38.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\n\nconst TagsContainer = styled.div` \n  display: inline-block;\n\n  font-size: 0.85rem;\n  opacity: 0.7;\n\n  .item{\n    margin-right: .5rem;\n  }\n  .item:before{\n    content: '#';\n  }\n`\n\nexport const TagList = ({ tags }) => {\n  return(\n    <TagsContainer>\n      {tags.map(tag => {\n        return (<span className='item' key={tag}>{tag}</span>)\n      })}\n    </TagsContainer>\n  )\n}","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link, graphql } from \"gatsby\"\nimport styled from 'styled-components';\nimport { Head } from \"../components/head/head\"\nimport { Layout } from \"../components/layout/layout\";\nimport {PostList} from '../components/post-list/post-list'\n\n\nconst BackButton = styled.div`\n  margin-bottom: 5vh\n`\nconst Tags = ({ data }) => {\n  const { edges } = data.allMarkdownRemark\n  return (\n    <>\n    <Head title={data.site.siteMetadata.title} />\n    <Layout siteData={data.site}>\n        <section id=\"content\">\n          <BackButton>\n            <Link to=\"/\">back</Link>\n          </BackButton>\n          \n          <PostList posts={edges}/>\n        </section>\n    </Layout>\n    </>\n  )\n}\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] }, draft: {ne: false}} }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            tags\n            title\n            date(formatString: \"YYYY-MM-DD\")\n          }\n        }\n      }\n    }\n  }\n`","import React from \"react\"\nimport {TagList} from '../tags/tags'\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\n\nconst PostRepHeader = styled.h3`\n  font-size: 1.2rem;\n  margin-bottom: 1vh;\n`\nconst PostRepDate = styled.div`\n  display: inline-block;\n  font-size: 0.85rem;\n  opacity: 0.7;\n  padding-right: 0.5rem;\n`\nconst PostRepTags = styled.div`\n  display: inline-block;\n  margin-left: 1rem;\n\n  font-size: 0.85rem;\n  opacity: 0.7;\n\n  .item {\n    margin-right: 0.5rem;\n  }\n  .item:before {\n    content: \"#\";\n  }\n`\nconst PostRepExcerpt = styled.div`\n  font-size: 0.9rem;\n  opacity: 0.8;\n\n  -webkit-line-clamp: 2;\n  line-height: 1.5rem;\n  height: 3rem;\n\n  word-wrap: break-word;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport const PostItem = ({ title, tags, date, excerpt, slug }) => {\n  return (\n    <div>\n      <PostRepHeader>\n        <Link to={slug}>{title}</Link>\n      </PostRepHeader>\n\n      <PostRepDate className=\"post-rep-date\">\n        {date}\n      </PostRepDate>\n\n      <PostRepTags>\n        <TagList tags={tags} />\n      </PostRepTags>\n\n      <PostRepExcerpt className=\"post-rep-excerpt\">\n        {excerpt}\n      </PostRepExcerpt>\n    </div>\n  )\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport './post-item'\nimport { PostItem } from \"./post-item\"\n\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`\nconst List = styled.ul`\n  margin-left: 0;\n  padding: 0;\n`\nconst Item = styled.li`\n  list-style: none;\n  margin-bottom: 9vh;\n`\n\nexport const PostList = ({posts, isSearchpage=false}) =>{\n\n  return(\n    <Container>\n      <List>\n        {\n          posts.map(node=> {\n            node = isSearchpage? node : ((node.node));\n            const title = isSearchpage? node.title : node.frontmatter.title\n            const tags = isSearchpage? node.tags : node.frontmatter.tags\n            const date = isSearchpage? node.date : node.frontmatter.date\n            const slug = isSearchpage? node.slug : node.fields.slug\n\n            return(\n              <Item key = {slug}>\n                <PostItem\n                  title={title}\n                  tags={tags}\n                  date={date}\n                  excerpt={node.excerpt}\n                  slug={slug}\n                />\n              </Item>\n            )\n          })\n        }\n      </List>\n    </Container>\n  )\n}\n"],"sourceRoot":""}