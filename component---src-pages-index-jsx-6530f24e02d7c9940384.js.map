{"version":3,"sources":["webpack:///./src/components/tags/tags.jsx","webpack:///./src/pages/index.jsx","webpack:///./src/components/post-rep/post-rep.jsx"],"names":["TagsContainer","styled","div","TagList","tags","map","tag","className","key","PostListContainer","PostList","ul","PostItem","li","IndexPage","data","edges","allMarkdownRemark","title","site","siteMetadata","siteData","id","node","slug","fields","frontmatter","date","excerpt","pageQuery","PostRepHeader","h3","PostRepDate","PostRepTags","PostRepExcerpt","PostRep","to"],"mappings":"2FAAA,wEAGMA,EAAgBC,IAAOC,IAAV,0EAAGD,CAAH,+GAcNE,EAAU,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACxB,OACE,YAACJ,EAAD,KACGI,EAAKC,KAAI,SAAAC,GACR,OAAQ,oBAAMC,UAAU,OAAOC,IAAKF,GAAMA,S,kCCrBlD,8KASMG,EAAoBR,IAAOC,IAAV,2EAAGD,CAAH,yCAKjBS,EAAWT,IAAOU,GAAV,kEAAGV,CAAH,8BAIRW,EAAWX,IAAOY,GAAV,kEAAGZ,CAAH,wCAKC,SAASa,EAAT,GAA8B,IAATC,EAAQ,EAARA,KAC1BC,EAAUD,EAAKE,kBAAfD,MACDE,EAASH,EAAKI,KAAKC,aAAnBF,MACP,OACE,8BACA,YAAC,IAAD,CAAMA,MAAOA,IACb,YAAC,IAAD,CAAQG,SAAUN,EAAKI,MACnB,uBAASG,GAAG,WACV,YAACb,EAAD,KACE,YAACC,EAAD,KACGM,EAAMX,KAAI,YAAe,IAAZkB,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACAN,EAAUK,EAAKG,YAAfR,MACR,OACE,YAACN,EAAD,CAAUJ,IAAKgB,GACb,mBAAKjB,UAAU,YACf,YAAC,IAAD,CACEW,MAASA,EACTd,KAAQmB,EAAKG,YAAYtB,KACzBuB,KAAQJ,EAAKG,YAAYC,KACzBC,QAAWL,EAAKK,QAChBJ,KAAQA,cAcvB,IAAMK,EAAS,c,oCC1DtB,gGAMMC,EAAgB7B,IAAO8B,GAAV,0EAAG9B,CAAH,yCAIb+B,EAAc/B,IAAOC,IAAV,wEAAGD,CAAH,8EAMXgC,EAAchC,IAAOC,IAAV,wEAAGD,CAAH,+HAeXiC,EAAiBjC,IAAOC,IAAV,2EAAGD,CAAH,mJAaPkC,EAAU,SAAC,GAA0C,IAAxCjB,EAAuC,EAAvCA,MAAOd,EAAgC,EAAhCA,KAAMuB,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,QAASJ,EAAW,EAAXA,KACpD,OACE,uBACE,YAACM,EAAD,KACE,YAAC,IAAD,CAAMM,GAAIZ,GAAON,IAGnB,YAACc,EAAD,CAAazB,UAAU,iBACpBoB,GAGH,YAACM,EAAD,KACE,YAAC,IAAD,CAAS7B,KAAMA,KAGjB,YAAC8B,EAAD,CAAgB3B,UAAU,oBACvBqB","file":"component---src-pages-index-jsx-6530f24e02d7c9940384.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\n\nconst TagsContainer = styled.div` \n  display: inline-block;\n\n  font-size: 0.85rem;\n  opacity: 0.7;\n\n  .item{\n    margin-right: .5rem;\n  }\n  .item:before{\n    content: '#';\n  }\n`\n\nexport const TagList = ({ tags }) => {\n  return(\n    <TagsContainer>\n      {tags.map(tag => {\n        return (<span className='item' key={tag}>{tag}</span>)\n      })}\n    </TagsContainer>\n  )\n}","import React from \"react\"\r\n\r\nimport { Layout } from \"../components/layout/layout\"\r\nimport { graphql } from \"gatsby\"\r\nimport {Head} from './../components/head/head'\r\nimport {PostRep} from './../components/post-rep/post-rep'\r\nimport styled from \"styled-components\"\r\n\r\n\r\nconst PostListContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst PostList = styled.ul`\r\n  margin-left: 0;\r\n  padding: 0;\r\n`\r\nconst PostItem = styled.li`\r\n  list-style: none;\r\n  margin-bottom: 9vh;\r\n`\r\n\r\nexport default function IndexPage({ data }) {\r\n  const { edges } = data.allMarkdownRemark\r\n  const {title} = data.site.siteMetadata;\r\n  return (\r\n    <>\r\n    <Head title={title}/>\r\n    <Layout siteData={data.site}>\r\n        <section id=\"content\">\r\n          <PostListContainer>\r\n            <PostList>\r\n              {edges.map(({ node }) => {\r\n                const { slug } = node.fields\r\n                const { title } = node.frontmatter\r\n                return (\r\n                  <PostItem key={slug}>\r\n                    <div className=\"post-rep\">\r\n                    <PostRep\r\n                      title = {title}\r\n                      tags = {node.frontmatter.tags}\r\n                      date = {node.frontmatter.date}\r\n                      excerpt = {node.excerpt}\r\n                      slug = {slug}\r\n                    />\r\n                    </div>\r\n                  </PostItem>\r\n                )\r\n              })}\r\n            </PostList>\r\n          </PostListContainer>\r\n        </section>\r\n    </Layout>\r\n    </>\r\n  )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            tags\r\n            title\r\n            date(formatString: \"YYYY-MM-DD\")\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\nimport {TagList} from './../tags/tags'\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\n\nconst PostRepHeader = styled.h3`\n  font-size: 1.2rem;\n  margin-bottom: 1vh;\n`\nconst PostRepDate = styled.div`\n  display: inline-block;\n  font-size: 0.85rem;\n  opacity: 0.7;\n  padding-right: 0.5rem;\n`\nconst PostRepTags = styled.div`\n  display: inline-block;\n  margin-left: 1rem;\n\n  font-size: 0.85rem;\n  opacity: 0.7;\n\n  .item {\n    margin-right: 0.5rem;\n  }\n  .item:before {\n    content: \"#\";\n  }\n`\n\nconst PostRepExcerpt = styled.div`\n  font-size: 0.9rem;\n  opacity: 0.8;\n\n  -webkit-line-clamp: 2;\n  line-height: 1.5rem;\n  height: 3rem;\n\n  word-wrap: break-word;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport const PostRep = ({ title, tags, date, excerpt, slug }) => {\n  return (\n    <div>\n      <PostRepHeader>\n        <Link to={slug}>{title}</Link>\n      </PostRepHeader>\n\n      <PostRepDate className=\"post-rep-date\">\n        {date}\n      </PostRepDate>\n\n      <PostRepTags>\n        <TagList tags={tags} />\n      </PostRepTags>\n\n      <PostRepExcerpt className=\"post-rep-excerpt\">\n        {excerpt}\n      </PostRepExcerpt>\n    </div>\n  )\n}\n"],"sourceRoot":""}