{"version":3,"sources":["webpack:///./src/components/tags/tags.jsx","webpack:///./src/pages/index.jsx","webpack:///./src/components/post-list/post-item.jsx","webpack:///./src/components/post-list/post-list.jsx"],"names":["TagsContainer","styled","div","TagList","tags","map","tag","className","key","IndexPage","data","edges","allMarkdownRemark","title","site","siteMetadata","siteData","id","posts","pageQuery","PostRepHeader","h3","PostRepDate","PostRepTags","PostRepExcerpt","PostItem","date","excerpt","slug","to","Container","List","ul","Item","li","PostList","isSearchpage","node","frontmatter","fields"],"mappings":"2FAAA,wEAGMA,EAAgBC,IAAOC,IAAV,0EAAGD,CAAH,+GAcNE,EAAU,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACxB,OACE,YAACJ,EAAD,KACGI,EAAKC,KAAI,SAAAC,GACR,OAAQ,oBAAMC,UAAU,OAAOC,IAAKF,GAAMA,S,kCCrBlD,kKAQe,SAASG,EAAT,GAA8B,IAATC,EAAQ,EAARA,KAC1BC,EAAUD,EAAKE,kBAAfD,MACDE,EAASH,EAAKI,KAAKC,aAAnBF,MACP,OACE,8BACA,YAAC,IAAD,CAAMA,MAAOA,IACb,YAAC,IAAD,CAAQG,SAAUN,EAAKI,MACnB,uBAASG,GAAG,WACZ,YAAC,IAAD,CAAUC,MAAOP,OAOlB,IAAMQ,EAAS,c,oICjBhBC,EAAgBnB,IAAOoB,GAAV,+EAAGpB,CAAH,yCAIbqB,EAAcrB,IAAOC,IAAV,6EAAGD,CAAH,8EAMXsB,EAActB,IAAOC,IAAV,6EAAGD,CAAH,+HAcXuB,EAAiBvB,IAAOC,IAAV,gFAAGD,CAAH,mJAaPwB,EAAW,SAAC,GAA0C,IAAxCZ,EAAuC,EAAvCA,MAAOT,EAAgC,EAAhCA,KAAMsB,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KACrD,OACE,uBACE,YAACR,EAAD,KACE,YAAC,IAAD,CAAMS,GAAID,GAAOf,IAGnB,YAACS,EAAD,CAAaf,UAAU,iBACpBmB,GAGH,YAACH,EAAD,KACE,YAAC,IAAD,CAASnB,KAAMA,KAGjB,YAACoB,EAAD,CAAgBjB,UAAU,oBACvBoB,KCrDHG,EAAY7B,IAAOC,IAAV,uEAAGD,CAAH,yCAIT8B,EAAO9B,IAAO+B,GAAV,kEAAG/B,CAAH,8BAIJgC,EAAOhC,IAAOiC,GAAV,kEAAGjC,CAAH,wCAKGkC,EAAW,SAAC,GAAgC,IAA/BjB,EAA8B,EAA9BA,MAA8B,IAAvBkB,oBAAuB,SAEtD,OACE,YAACN,EAAD,KACE,YAACC,EAAD,KAEIb,EAAMb,KAAI,SAAAgC,GACRA,EAAOD,EAAcC,EAASA,EAAKA,KACnC,IAAMxB,EAAQuB,EAAcC,EAAKxB,MAAQwB,EAAKC,YAAYzB,MACpDT,EAAOgC,EAAcC,EAAKjC,KAAOiC,EAAKC,YAAYlC,KAClDsB,EAAOU,EAAcC,EAAKX,KAAOW,EAAKC,YAAYZ,KAClDE,EAAOQ,EAAcC,EAAKT,KAAOS,EAAKE,OAAOX,KAEnD,OACE,YAACK,EAAD,CAAMzB,IAAOoB,GACX,YAAC,EAAD,CACEf,MAAOA,EACPT,KAAMA,EACNsB,KAAMA,EACNC,QAASU,EAAKV,QACdC,KAAMA","file":"component---src-pages-index-jsx-00c6938d8e2599d3061f.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\n\nconst TagsContainer = styled.div` \n  display: inline-block;\n\n  font-size: 0.85rem;\n  opacity: 0.7;\n\n  .item{\n    margin-right: .5rem;\n  }\n  .item:before{\n    content: '#';\n  }\n`\n\nexport const TagList = ({ tags }) => {\n  return(\n    <TagsContainer>\n      {tags.map(tag => {\n        return (<span className='item' key={tag}>{tag}</span>)\n      })}\n    </TagsContainer>\n  )\n}","import React from \"react\"\r\n\r\nimport { Layout } from \"../components/layout/layout\"\r\nimport { graphql } from \"gatsby\"\r\nimport {Head} from './../components/head/head'\r\nimport {PostList} from '../components/post-list/post-list'\r\n\r\n\r\nexport default function IndexPage({ data }) {\r\n  const { edges } = data.allMarkdownRemark\r\n  const {title} = data.site.siteMetadata;\r\n  return (\r\n    <>\r\n    <Head title={title}/>\r\n    <Layout siteData={data.site}>\r\n        <section id=\"content\">\r\n        <PostList posts={edges}/>\r\n        </section>\r\n    </Layout>\r\n    </>\r\n  )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: {frontmatter: {draft: {ne: false}}}\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            tags\r\n            title\r\n            date(formatString: \"YYYY-MM-DD\")\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\nimport {TagList} from '../tags/tags'\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\n\nconst PostRepHeader = styled.h3`\n  font-size: 1.2rem;\n  margin-bottom: 1vh;\n`\nconst PostRepDate = styled.div`\n  display: inline-block;\n  font-size: 0.85rem;\n  opacity: 0.7;\n  padding-right: 0.5rem;\n`\nconst PostRepTags = styled.div`\n  display: inline-block;\n  margin-left: 1rem;\n\n  font-size: 0.85rem;\n  opacity: 0.7;\n\n  .item {\n    margin-right: 0.5rem;\n  }\n  .item:before {\n    content: \"#\";\n  }\n`\nconst PostRepExcerpt = styled.div`\n  font-size: 0.9rem;\n  opacity: 0.8;\n\n  -webkit-line-clamp: 2;\n  line-height: 1.5rem;\n  height: 3rem;\n\n  word-wrap: break-word;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport const PostItem = ({ title, tags, date, excerpt, slug }) => {\n  return (\n    <div>\n      <PostRepHeader>\n        <Link to={slug}>{title}</Link>\n      </PostRepHeader>\n\n      <PostRepDate className=\"post-rep-date\">\n        {date}\n      </PostRepDate>\n\n      <PostRepTags>\n        <TagList tags={tags} />\n      </PostRepTags>\n\n      <PostRepExcerpt className=\"post-rep-excerpt\">\n        {excerpt}\n      </PostRepExcerpt>\n    </div>\n  )\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport './post-item'\nimport { PostItem } from \"./post-item\"\n\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`\nconst List = styled.ul`\n  margin-left: 0;\n  padding: 0;\n`\nconst Item = styled.li`\n  list-style: none;\n  margin-bottom: 9vh;\n`\n\nexport const PostList = ({posts, isSearchpage=false}) =>{\n\n  return(\n    <Container>\n      <List>\n        {\n          posts.map(node=> {\n            node = isSearchpage? node : ((node.node));\n            const title = isSearchpage? node.title : node.frontmatter.title\n            const tags = isSearchpage? node.tags : node.frontmatter.tags\n            const date = isSearchpage? node.date : node.frontmatter.date\n            const slug = isSearchpage? node.slug : node.fields.slug\n\n            return(\n              <Item key = {slug}>\n                <PostItem\n                  title={title}\n                  tags={tags}\n                  date={date}\n                  excerpt={node.excerpt}\n                  slug={slug}\n                />\n              </Item>\n            )\n          })\n        }\n      </List>\n    </Container>\n  )\n}\n"],"sourceRoot":""}