{"version":3,"sources":["webpack:///./src/templates/post-page.js"],"names":["MetaWrapper","styled","div","PostContentWrapper","Post","props","className","title","date","tags","map","tag","dangerouslySetInnerHTML","__html","html","Template","data","post","markdownRemark","category","frontmatter","root","site","siteMetadata","postQuery"],"mappings":"2IAAA,iKAWMA,EAAcC,IAAOC,IAAV,6EAAGD,CAAH,6KAsBXE,EAAqBF,IAAOC,IAAV,oFAAGD,CAAH,6FAYlBG,EAAO,SAAAC,GAAK,OAChB,2BACI,mBAAKC,UAAU,aACb,YAACN,EAAD,CAAaM,UAAU,aACnB,sBAAKD,EAAME,OACX,mBAAKD,UAAU,QAAQD,EAAMG,MAC7B,mBAAKF,UAAU,SACZ,SAAAD,GAAK,OAAmB,MAAdA,EAAMI,KAAiB,GAAOJ,EAAMI,KAAKC,KAAI,SAAAC,GAAG,OAAK,wBAAOA,UAG7E,YAACR,EAAD,CACEG,UAAU,oBACVM,wBAAyB,CAAEC,OAAQR,EAAMS,WAUpC,SAASC,EAAT,GAA6B,IAATC,EAAQ,EAARA,KACTC,EAASD,EAAzBE,eACFC,EAAyC,MAA7BF,EAAKG,YAAYD,SAAoB,YAAcF,EAAKG,YAAYD,SAEtF,OACE,YAAC,IAAD,CAAQE,KAAML,EAAKM,KAAKC,aAAahB,MACnCA,MAAOU,EAAKG,YAAYb,MACxBY,SAAUA,GACV,YAACf,EAAD,CACEG,MAAOU,EAAKG,YAAYb,MACxBC,KAAMS,EAAKG,YAAYZ,KACvBC,KAAMQ,EAAKG,YAAYX,KACvBK,KAAMG,EAAKH,QAMZ,IAAMU,EAAS","file":"component---src-templates-post-page-js-67f392c94876ecf00640.js","sourcesContent":["// src/template/post.js\r\nimport React from 'react';\r\n\r\nimport { graphql } from 'gatsby';\r\nimport { Layout } from '../components/layout/layout'\r\n\r\nimport './../styles/code-style.scss'\r\nimport './../styles/post-style.scss'\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst MetaWrapper = styled.div`\r\n  padding-bottom: 1rem;\r\n  border-bottom: 1px solid #8383837e;\r\n\r\n  .date, .tags{\r\n    font-size: .9rem;\r\n    font-weight: 400;\r\n    opacity: .8;\r\n  }\r\n\r\n  .tags{\r\n    span{\r\n      margin-right: .5em;\r\n    }\r\n    span:before{\r\n      content: '#';\r\n      }   \r\n    }\r\n  }\r\n`\r\n\r\n\r\nconst PostContentWrapper = styled.div`\r\n  h1, h2, h3{\r\n    margin-top: 2em;\r\n    margin-bottom: 1em;\r\n  }\r\n  h4, h5, h6{\r\n    margin-top: 1em;\r\n    margin-bottom: .5em;\r\n  }\r\n`\r\n\r\n\r\nconst Post = props => (\r\n  <article>\r\n      <div className=\"blog-post\">\r\n        <MetaWrapper className='post-meta'>\r\n            <h1>{props.title}</h1>\r\n            <div className=\"date\">{props.date}</div>\r\n            <div className=\"tags\">\r\n              {props => (props.tags == null) ?  \"\"  : (props.tags.map(tag => (<span>{tag}</span>)))}\r\n            </div>\r\n        </MetaWrapper>\r\n        <PostContentWrapper\r\n          className=\"blog-post-content\"\r\n          dangerouslySetInnerHTML={{ __html: props.html }}\r\n        />\r\n      </div>\r\n  </article>\r\n)\r\n\r\n/*\r\ndata come from graphQL query then can be\r\nrendered in our template\r\n*/\r\nexport default function Template({ data }) {\r\n  const { markdownRemark: post } = data;\r\n  const category = (post.frontmatter.category == null) ? 'undefined' : post.frontmatter.category;\r\n\r\n  return (\r\n    <Layout root={data.site.siteMetadata.title}\r\n      title={post.frontmatter.title}\r\n      category={category}>\r\n      <Post\r\n        title={post.frontmatter.title}\r\n        date={post.frontmatter.date}\r\n        tags={post.frontmatter.tags}\r\n        html={post.html}>\r\n      </Post>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const postQuery = graphql`\r\n  query postQuery($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        url\r\n        language\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        title\r\n        category\r\n        tags\r\n        keywords\r\n      }\r\n      fields {\r\n        slug\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}