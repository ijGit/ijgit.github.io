{"version":3,"sources":["webpack:///./src/components/header/header.jsx","webpack:///./src/components/layout/layout.jsx","webpack:///./src/templates/post-page.js"],"names":["Header","siteData","id","className","to","siteMetadata","title","Layout","location","children","Fragment","Template","data","post","markdownRemark","site","frontmatter","date","dangerouslySetInnerHTML","__html","html","postQuery"],"mappings":"4NAIaA,EAAS,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACtB,OACE,sBAAQC,GAAG,UACT,mBAAKC,UAAU,gBACb,sBACE,YAAC,OAAD,CAAMC,GAAI,KACPH,EAASI,aAAaC,WCHtBC,G,gFAAS,SAAC,GAAmC,EAAlCC,SAAmC,IAAzBP,EAAwB,EAAxBA,SAAUQ,EAAc,EAAdA,SAC1C,OACE,YAAC,IAAMC,SAAP,KACE,mBAAKR,GAAG,UAEN,YAAC,EAAD,CAAQD,SAAUA,IAClB,wBACE,mBAAKC,GAAG,WACLO,S,4NCfb,qJAce,SAASE,EAAT,GAA0B,IAAPC,EAAM,EAANA,KACVC,EAAQD,EAAvBE,eACAC,EAAQH,EAARG,KAGP,OACE,YAAC,IAAD,CAAQd,SAAUc,GAChB,2BAEA,mBAAKZ,UAAU,uBACb,mBAAKA,UAAU,aACb,sBAAKU,EAAKG,YAAYV,OACtB,sBAAKO,EAAKG,YAAYC,MACtB,mBACEd,UAAU,oBACVe,wBAAyB,CAACC,OAAQN,EAAKO,YAS5C,IAAMC,EAAS","file":"component---src-templates-post-page-js-49c107712ea3e2c13294.js","sourcesContent":["\nimport React from \"react\";\nimport { Link } from \"gatsby\";\n\nexport const Header = ({siteData}) => {\n  return(\n    <header id='header'>\n      <div className='header-title'>\n        <h1>\n          <Link to={'/'}>\n            {siteData.siteMetadata.title}\n          </Link>\n        </h1>\n      </div>\n    </header>\n  )\n}","import React from 'react';\n\nimport { Header } from '../header/header';\n\nimport './layout.scss';\nimport './../../styles/font';\n\nexport const Layout = ({location, siteData, children}) => {\n  return(\n    <React.Fragment>\n      <div id=\"layout\">\n\n        <Header siteData={siteData} />\n        <main>\n          <div id='content'>\n            {children}\n          </div>\n        </main>\n      </div>\n    </React.Fragment>\n  )\n}","// src/template/post.js\nimport React from 'react';\n\nimport { graphql } from 'gatsby';\nimport { Layout } from '../components/layout/layout'\n\nimport './../styles/code-style.scss'\nimport './../styles/article-style.scss'\n//require(\"prismjs/themes/prism-solarizedlight.css\");\n\n/*\ndata come from graphQL query then can be\nrendered in our template\n*/\nexport default function Template({data}){\n  const {markdownRemark:post} = data; \n  const {site} = data;\n  // const post = data.markdownRemark;\n\n  return (\n    <Layout siteData={site}>\n      <article>\n\n      <div className=\"blog-post-container\">\n        <div className=\"blog-post\">\n          <h1>{post.frontmatter.title}</h1>\n          <h2>{post.frontmatter.date}</h2>\n          <div\n            className=\"blog-post-content\"\n            dangerouslySetInnerHTML={{__html: post.html}}\n            />\n        </div>\n      </div>\n      </article>\n    </Layout>\n  )\n}\n\nexport const postQuery = graphql`\n  query postQuery($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        url\n      }\n      pathPrefix\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        categories\n        tags\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`"],"sourceRoot":""}