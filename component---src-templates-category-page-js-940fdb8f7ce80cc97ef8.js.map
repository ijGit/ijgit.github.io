{"version":3,"sources":["webpack:///./src/templates/category-page.js"],"names":["PostItem","props","className","key","to","title","date","category","tags","excerpt","Template","data","posts","allMarkdownRemark","site","siteMetadata","markdownRemark","frontmatter","root","edges","map","post","node","id","fields","slug","pageQuery"],"mappings":"2FAAA,2IAWMA,EAAW,SAAAC,GAAK,OACpB,mBAAKC,UAAU,YAAYC,IAAKF,EAAME,KACpC,mBAAKD,UAAU,mBACb,sBAAI,YAAC,OAAD,CAAME,GAAIH,EAAMG,IAAhB,IAAsBH,EAAMI,SAElC,mBAAKH,UAAU,kBACb,wBAAOD,EAAMK,MACb,wBAAOL,EAAMM,UACb,wBAAON,EAAMO,OAEf,mBAAKN,UAAU,qBAAqBD,EAAMQ,WAK/B,SAASC,EAAT,GAAkC,IAAD,IAAbC,YAAa,MAAN,GAAM,EAEnBC,EAAUD,EAA7BE,kBACFR,EAAQM,EAAKG,KAAKC,aAAaV,MACjCE,EAAWI,EAAKK,eAAeC,YAAYV,SAG/C,OAFAA,EAAuB,MAAZA,EAAmB,YAAcA,EAG1C,YAAC,IAAD,CAAQW,KAAMP,EAAKG,KAAKC,aAAaV,MAAOA,MAAOA,EAAOE,SAAUA,GACjEK,EAAMO,MAAMC,KAAI,SAAAC,GAAI,OAEnB,YAACrB,EAAD,CACEG,IAAKkB,EAAKC,KAAKC,GACfnB,GAAIiB,EAAKC,KAAKE,OAAOC,KACrBpB,MAASgB,EAAKC,KAAKL,YAAYZ,MAC/BC,KAAQe,EAAKC,KAAKL,YAAYX,KAC9BC,SAAYc,EAAKC,KAAKL,YAAYV,SAClCC,KAAQa,EAAKC,KAAKL,YAAYT,KAC9BC,QAAWY,EAAKC,KAAKb,cAOxB,IAAMiB,EAAS","file":"component---src-templates-category-page-js-940fdb8f7ce80cc97ef8.js","sourcesContent":["// src/template/category-page.js\r\n\r\nimport React from 'react';\r\nimport { graphql, Link } from 'gatsby';\r\nimport { Layout } from '../components/layout/layout';\r\n\r\n/*\r\ndata come from graphQL query then can be\r\nrendered in our template\r\n*/\r\n\r\nconst PostItem = props => (\r\n  <div className=\"post-item\" key={props.key}>\r\n    <div className=\"post-item-title\">\r\n      <h3><Link to={props.to}> {props.title}</Link></h3>\r\n    </div>\r\n    <div className=\"post-item-meta\">\r\n      <span>{props.date}</span>\r\n      <span>{props.category}</span>\r\n      <span>{props.tags}</span>\r\n    </div>\r\n    <div className=\"post-item-excerpt\">{props.excerpt}</div>\r\n  </div>\r\n)\r\n\r\n\r\nexport default function Template({ data = [] }) {\r\n\r\n  const { allMarkdownRemark: posts } = data;\r\n  const title = data.site.siteMetadata.title;\r\n  var category = data.markdownRemark.frontmatter.category;\r\n  category = category == null ? 'undefined' : category;\r\n\r\n  return (\r\n    <Layout root={data.site.siteMetadata.title} title={title} category={category}>\r\n      {posts.edges.map(post => (\r\n\r\n        <PostItem\r\n          key={post.node.id}\r\n          to={post.node.fields.slug}\r\n          title = {post.node.frontmatter.title}\r\n          date = {post.node.frontmatter.date}\r\n          category = {post.node.frontmatter.category}\r\n          tags = {post.node.frontmatter.tags}\r\n          excerpt = {post.node.excerpt}\r\n        />\r\n      ))}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query categoryQuery($eq: String, $slug: String) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        url\r\n        language\r\n      }\r\n    }\r\n    allMarkdownRemark(limit: 1000, sort: {fields: frontmatter___date, order: DESC}, \r\n      filter: {frontmatter: {category: {eq: $eq }, type: {ne: \"category\"}}}) {\r\n      edges{\r\n        node{\r\n          id\r\n          frontmatter {\r\n            category\r\n            date(formatString: \"YYYY-MM-DD\")\r\n            title\r\n            description\r\n          }\r\n          excerpt(pruneLength: 100, truncate: false)\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n    markdownRemark(fields: {slug: {eq: $slug}}) {\r\n      frontmatter {\r\n        category\r\n        description\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}