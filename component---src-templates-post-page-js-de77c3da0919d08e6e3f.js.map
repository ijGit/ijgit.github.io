{"version":3,"sources":["webpack:///./src/templates/post-page.js"],"names":["Template","data","post","markdownRemark","category","frontmatter","root","site","siteMetadata","title","date","tags","html","className","dangerouslySetInnerHTML","__html","postQuery"],"mappings":"2IAAA,qJAuCe,SAASA,EAAT,GAA6B,IAATC,EAAQ,EAARA,KACTC,EAASD,EAAzBE,eACFC,EAAyC,MAA7BF,EAAKG,YAAYD,SAAoB,YAAcF,EAAKG,YAAYD,SAChFE,EAAOL,EAAKM,KAAKC,aAAaC,MAC9BA,EAAQP,EAAKG,YAAYI,MACzBC,EAAOR,EAAKG,YAAYK,KACxBC,EAAOT,EAAKG,YAAYM,KACxBC,EAAOV,EAAKU,KAElB,OACE,YAAC,IAAD,CAAQN,KAAMA,EAAMG,MAAOA,EAAOL,SAAUA,GAO1C,2BACE,mBAAKS,UAAU,uBACb,mBAAKA,UAAU,aACb,mBAAKA,UAAU,aACb,mBAAKA,UAAU,cACb,gCAEF,uBACE,oBAAMA,UAAU,aAAaH,GAC7B,oBAAMG,UAAU,YAAYF,KAGhC,mBACEE,UAAU,oBACVC,wBAAyB,CAAEC,OAAQH,SAS1C,IAAMI,EAAS","file":"component---src-templates-post-page-js-de77c3da0919d08e6e3f.js","sourcesContent":["// src/template/post.js\r\nimport React from 'react';\r\n\r\nimport { graphql } from 'gatsby';\r\nimport { Layout } from '../components/layout/layout'\r\n\r\nimport './../styles/code-style.scss'\r\nimport './../styles/post-style.scss'\r\n\r\n// export function Post({ props }) {\r\n//   return (\r\n//     <article>\r\n//       <div className=\"blog-post-container\">\r\n//         <div className=\"blog-post\">\r\n//           <div className='post-meta'>\r\n//             <div className=\"post-title\">\r\n//               <h1>{props.title}</h1>\r\n//             </div>\r\n//             <div>\r\n//               <span className=\"post-date\">{props.date}</span>\r\n//               <span className=\"post-tag\">{props.tags}</span>\r\n//             </div>\r\n//           </div>\r\n//           <div\r\n//             className=\"blog-post-content\"\r\n//             dangerouslySetInnerHTML={{ __html: props.html }}\r\n//           />\r\n//         </div>\r\n//       </div>\r\n//     </article>\r\n//   )\r\n// }\r\n\r\n\r\n\r\n/*\r\ndata come from graphQL query then can be\r\nrendered in our template\r\n*/\r\nexport default function Template({ data }) {\r\n  const { markdownRemark: post } = data;\r\n  const category = (post.frontmatter.category == null) ? 'undefined' : post.frontmatter.category;\r\n  const root = data.site.siteMetadata.title;\r\n  const title = post.frontmatter.title;\r\n  const date = post.frontmatter.date;\r\n  const tags = post.frontmatter.tags;\r\n  const html = post.html;\r\n\r\n  return (\r\n    <Layout root={root} title={title} category={category}>\r\n      {/* <Post title = {title}\r\n        date = {post.frontmatter.date}\r\n        tags = {post.frontmatter.tags}\r\n        html = {post.html}> \r\n      </Post> */}\r\n\r\n      <article>\r\n        <div className=\"blog-post-container\">\r\n          <div className=\"blog-post\">\r\n            <div className='post-meta'>\r\n              <div className=\"post-title\">\r\n                <h1>title</h1>\r\n              </div>\r\n              <div>\r\n                <span className=\"post-date\">{date}</span>\r\n                <span className=\"post-tag\">{tags}</span>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"blog-post-content\"\r\n              dangerouslySetInnerHTML={{ __html: html }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </article>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const postQuery = graphql`\r\n  query postQuery($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        url\r\n        language\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        title\r\n        category\r\n        tags\r\n        keywords\r\n      }\r\n      fields {\r\n        slug\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}