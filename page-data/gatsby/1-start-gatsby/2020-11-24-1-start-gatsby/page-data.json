{"componentChunkName":"component---src-templates-post-js","path":"/gatsby/1-start-gatsby/2020-11-24-1-start-gatsby/","result":{"data":{"markdownRemark":{"html":"<h1>GitPage 생성</h1>\n<p>GitPage (Github Page) 는 저장소에서 구성된 웹 사이트를 호스팅 할 수 있도록 GitHub 에서 제공하는 서비스이다. </p>\n<p>GitPage 는 <code>USERNAME.github.io</code>으로 호스팅하거나 저장소 (repository) 별로 페이지를 만들어 호스팅 하는 것이 가능하다. 이러한 페이지는 <code>USERNAME.github.io/PROJECT_NAME</code> 으로 접속할 수 있다. </p>\n<p>일반적으로 저장소 이름을 <code>USERNAME.github.io</code> 으로 설정하여 생성했을 시에 별다른 조작 없이 자동으로 GitPage 가 호스팅된다. </p>\n<p>저장소 이름에 따른 GitPage URL 은 아래와 같다</p>\n<table>\n<thead>\n<tr>\n<th>repository name</th>\n<th>url</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>USERNAME.github.io</code></td>\n<td><code>https://USERNAME.github.io</code></td>\n</tr>\n<tr>\n<td><code>PROJECT_NAME</code></td>\n<td><code>https://USERNAME.github.io/PROJECT_NAME</code></td>\n</tr>\n</tbody>\n</table>\n<br>\n<h3>GitPage 페이지 소스 분기 구성</h3>\n<p>GitPage 가 동작하려면 GitHub Repository Setting 페이지에서 배포 분기를 설정해야 한다. </p>\n<ol>\n<li>Repository 설정 페이지 이동</li>\n<li>GitHub Pages 하위 설정창에서 브랜치 및 디렉토리 선택</li>\n</ol>\n<p>성공적으로 깃허브 페이지가 만들어지면  <code>Your site is ready to be published at https://USERNAME.github.io/.</code> 라는 메시지가 생긴 것을 확인 가능하다.</p>\n<p><img src=\"1-start-gatsby-1.gif\" alt=\"image\"></p>\n<h1>개발 환경 설정</h1>\n<blockquote>\n<p>해당 게시물에서는 Windows 환경에서 WSL2 로 작업을 진행하였습니다. 다른 운영체제에서 개발환경을 설정하려면  <a href=\"https://www.gatsbyjs.com/tutorial/part-zero/%EB%A5%BC\">https://www.gatsbyjs.com/tutorial/part-zero/를</a> 참고해 주세요.</p>\n</blockquote>\n<p>Linux 배포 update 및 upgrade </p>\n<pre><code class=\"language-shell\">$ sudo apt update\n$ sudo apt upgrade\n</code></pre>\n<p>curl 설치 후, nvm 설치</p>\n<pre><code class=\"language-shell\"># curl: 데이터 전송, 추가 종속성 다운 가능\n$ sudo apt-get install curl\n\n# install nvm\n$ curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash\n\n# verify the installation\n$ nvm --version\n</code></pre>\n<p>install node.js &#x26; npm</p>\n<pre><code class=\"language-shell\"># install nodejs\n$ sudo apt install nodejs\n\n# verify the installation\n$ node -v\n\n# install npm\n$ sudo apt install npm\n\n# verify the installation\n$ npm -v \n</code></pre>\n<p>install git</p>\n<pre><code class=\"language-shell\">$ sudo apt install git\n\n# verify installation\n$ git --version\n\n# configure git username\n$ git config --global user.name \"USER_NAME\"\n\n# configure git email\n$ git config --global user.email \"USER_EMAIL\"\n</code></pre>\n<p>install gatsby cli </p>\n<pre><code class=\"language-shell\">$ npm install -g gatsby-cli\n\n# generate new PROJECT using starter\n$ gatsby new PROJECT_NAME\n\n# change the working directory\n$ cd PROJECT_NAME\n\n# start the development server\n$ gatsby develop\n</code></pre>\n<p><code>gatsby develop</code> 를 실행하면 <a href=\"http://localhost:8000/\">http://localhost:8000/</a> 에서 Hot reloading 기능으로 개발이 가능하다.</p>\n<ul>\n<li>\n<p>hot reloading</p>\n<ul>\n<li>앱을 계속 실행하고 런타임에 편집한 파일의 새 버전을 삽입하는 것으로, 이를 통해 수정 사항을 바로 확인 할 수 있다. </li>\n<li>파일을 변경할 때마다 변경사항이 브라우저에 즉시 반영되므로 새로고침하거나 개발서버를 다시 시작할 필요가 없다.</li>\n</ul>\n</li>\n</ul>\n<h1>Start Gatsby Project</h1>\n<p>아래 명령어는 빈 프로젝트로 Gatsby 프로젝트를 생성하는 명령어다.</p>\n<blockquote>\n<p>목표는 내 블로그 테마 처음부터 내가 만들기이다. 만들면 엄청 뿌듯할 것 같다. </p>\n</blockquote>\n<pre><code class=\"language-shell\">$ gatsby new PROJECT_NAME https://github.com/gatsbyjs/gatsby-starter-hello-world\n\n>  cd PROJECT_NAME\n>  PROJECT_NAME\n</code></pre>\n<p>다른 테마를 사용하고 싶은 분들은 <a href=\"https://www.gatsbyjs.com/starters\">https://www.gatsbyjs.com/starters</a> 에서 원하는 테마를 찾으면 된다.</p>\n<h1>gatsby 블로그 배포</h1>\n<h2>setup</h2>\n<p>앞에서 생성한 <code>THEME_NAME</code> 디렉토리에서 github repository를 초기화하고 remote origin을 추가한다.</p>\n<pre><code class=\"language-shell\">$ git init\n$ git remote add origin https://github.com/&#x3C;your-github-username>/&#x3C;repository-name>.git\n\n# very remote\n$ git remote -v\n\n# it will look like this\n> origin  https://github.com/user/repo.git (fetch)\n> origin  https://github.com/user/repo.git (push)\n</code></pre>\n<h2>push</h2>\n<h3>branch setting</h3>\n<p>Gatsby 앱은 repository에서 두 개의 branch를 사용하여 운영을 한다. <br><code>develop</code> branch 에서는 개발을 진행하고 <code>main</code>branch 에는 배포되는 블로그 파일이 업로드된다.</p>\n<blockquote>\n<p><code>main</code> branch 이름은 개인의 repository 설정에 따라 달라지는데 배포되는 블로그 branch를 <code>master</code> (또는 그 외의 이름)로 설정하였다면 이후에 나오는 branch 옵션에서 <code>main</code>을 <code>master</code>로 대체해주어야 한다. </p>\n</blockquote>\n<p><br>아래 명령어를 실행하여 <code>develop</code> branch로 분기한 뒤 repository에 파일을 추가한다.</p>\n<pre><code class=\"language-shell\">$ git checkout -b develop\n\n# verify current branch\n$ git branch\n\n# it will look like this\n> * develop\n>   main\n\n# push project files to github repository from local\n$ git add .\n$ git commit -m 'commit message'\n$ git push -u origin develop\n\n * [new branch]      develop -> develop\nBranch 'develop' set up to track remote branch 'develop' from 'origin'.\n</code></pre>\n<h3>gh-pages</h3>\n<p>블로그 배포를 위해 <code>gh-pages</code> 를 설치한다.<br><code>gh-pages</code> 패키지를 이용하면 <code>Gatsby</code> 앱을 <code>GitPage</code>로 쉽게 push할 수 있다.</p>\n<pre><code class=\"language-shell\"># install gh-pages\n$ npm install gh-pages --save-dev \n</code></pre>\n<p><br><code>gh-pages</code> 구성을 위해 <code>package.json</code> 파일에 다음 스크립트를 추가한다.</p>\n<pre><code class=\"language-js\">// package.json\n\n{\n    \"scripts\": {\n        ...\n        // -d public (builded project file) \n        // -b main (branch name)\n        \"deploy\": \"gatsby build --prefix-paths &#x26;&#x26; gh-pages -d public -b main\",\n    }\n}\n</code></pre>\n<p><br>추가로 gitpage 가 <code>username.github.io</code> 가 아니라 <code>username.github.io/project-name</code> 인 경우, 설정 시에 <code>--prefix-paths</code> 를 설정해주어야 한다. </p>\n<pre><code class=\"language-js\">// gatsby-config.js\n\nmodule.exports = {\n    pathPrefix: \"/project-name\"\n}\n</code></pre>\n<p><br><code>npm run deploy</code>를 실행하면 블로그가 배포된다. 설정한 gitpage URL로 접속하여 블로그가 배포되었는지 확인하면 된다. </p>\n<pre><code class=\"language-shell\"># 블로그 배포 명령어\n$ npm run deploy\n</code></pre>\n<p><img src=\"1-start-gatsby-2.gif\" alt=\"image\"></p>","frontmatter":{"date":"November 24, 2020","title":"Gatsby로 Gitpage 블로그 만들기 1"}}},"pageContext":{"slug":"/gatsby/1-start-gatsby/2020-11-24-1-start-gatsby/"}},"staticQueryHashes":[]}