{"componentChunkName":"component---src-templates-post-js","path":"/c_cpp/2020-10-16-vector/","result":{"data":{"markdownRemark":{"html":"<h1>1. vector</h1>\n<ul>\n<li><code class=\"language-text\">vector</code>는 C++ STL (Standard Template Library)에 정의되어 있는 <strong>크기가 변경될 수 있는 배열</strong>을 나타내는 <strong>시퀀스 컨테이너</strong> 이다.</li>\n<li>\n<p>heap 메모리 공간에 생성되어 크기가 동적할당 되며 데이터 타입을 자유롭게 지정할 수 있다.</p>\n<ul>\n<li>벡터의 크기는 동적할당 되는데, 벡터는 내부적으로 새로운 요소가 삽입 될 때 크기를 늘리기 위해 재할당해야 할 수 있다.</li>\n<li>재할당을 하면 새로운 배열에 이전의 배열을 이동시켜야 하는 작업을 추가적으로 해야하므로 시간이 많이 들게 될 것이다. </li>\n<li>때문에 벡터는 재할당 되는 것을 최대한 줄이기 위해 약간의 추가 메모리 공간을 더 차지한다.</li>\n</ul>\n</li>\n</ul>\n<h1>2. Member functions</h1>\n<h2>2.1. Generator (생성)</h2>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">_vector</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ...</span>\n\nvector <span class=\"token operator\">&lt;</span>DATA_TYPE<span class=\"token operator\">></span> vec<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 벡터 생성</span>\n\nvector <span class=\"token operator\">&lt;</span>DATA_TYPE<span class=\"token operator\">></span> <span class=\"token function\">vec</span> <span class=\"token punctuation\">(</span>SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// SIZE 만큼 벡터 생성 후 0으로 초기화</span>\n\nvector<span class=\"token operator\">&lt;</span>DATA_TYPE<span class=\"token operator\">></span> vec <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>var_1<span class=\"token punctuation\">,</span> var_2<span class=\"token punctuation\">,</span> var_3<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 벡터 생성 후, 오른 쪽 변수로 초기화</span>\n\nvector <span class=\"token operator\">&lt;</span> vector <span class=\"token operator\">&lt;</span>DATA_TYPE<span class=\"token operator\">>></span> <span class=\"token number\">2</span>d_vec<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 2 차원 벡터 생성</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>2.2. Iterators (반복자)</h2>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">_vector</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ...</span>\n\n_vector<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 벡터 시작점의 주소 값</span>\n\n_vector<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 벡터 (끝부분+1) 주소값 반환</span>\n\n_vector<span class=\"token punctuation\">.</span><span class=\"token function\">rbegin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// (=reverse begin) 벡터의 끝 지점을 시작점으로 반환</span>\n\n_vector<span class=\"token punctuation\">.</span><span class=\"token function\">rend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">//  (=reverse end) 벡터의 (시작+1) 지점을 끝 부분으로 반환</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>2.2. Vector에 요소 삽입</h2>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">_vector</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ...</span>\n\n_vector<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 백터의 마지막 부분에 새로운 요소 추가 </span>\n\n_vector<span class=\"token punctuation\">.</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 백터의 마지막 부분 제거 </span>\n\n_vector<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 백터의 모든 요소를 지운다.(return size = 0)</span>\n\n_vector<span class=\"token punctuation\">.</span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span>IDX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                 <span class=\"token comment\">// IDX 위치의 요소를 삭제한다.</span>\n_vector<span class=\"token punctuation\">.</span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span>START_IDX<span class=\"token punctuation\">,</span> END_IDX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n_vector<span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span>SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 백터의 사이즈를 조정한다.(범위 초과시 0으로 초기화) </span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<br>\n<h2>2.3. Capacity</h2>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">_vector</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ...</span>\n\n_vector<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 벡터가 비어있으면 true, 아니면 false 반환</span>\n\n_vector<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 벡터의 크기 반환</span>\n\n_vector<span class=\"token punctuation\">.</span><span class=\"token function\">max_size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 벡터가 system에서 만들어질 수 있는 최대 크기 반환</span>\n\n_vector<span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span>SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 벡터 크기 설정</span>\n\n_vector<span class=\"token punctuation\">.</span><span class=\"token function\">shrink_to_fit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// capacity의 크기를 벡터의 실제 크기에 맞춤</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<br>\n<hr>\n<p>reference</p>\n<ul>\n<li><a href=\"http://www.cplusplus.com/reference/vector/vector/\">http://www.cplusplus.com/reference/vector/vector/</a></li>\n</ul>","frontmatter":{"date":"2020-10-16","title":"[C/C++] vector","tags":["C/C++","STL"]},"fields":{"slug":"/c_cpp/2020-10-16-vector/"}}},"pageContext":{"slug":"/c_cpp/2020-10-16-vector/"}},"staticQueryHashes":["2827402515","554375791"]}