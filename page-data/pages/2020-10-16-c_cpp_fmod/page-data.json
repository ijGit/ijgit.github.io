{"componentChunkName":"component---src-templates-post-js","path":"/pages/2020-10-16-c_cpp_fmod","result":{"data":{"markdownRemark":{"html":"<h1>1. 부동 소수점 값에 대한 나머지 연산</h1>\n<p>c, c++ 에서는 부동 소수점 값에 대해서 <code class=\"language-text\">%</code> 연산자를 사용하면 <code class=\"language-text\">invalid operands to binary expression</code> 이라는 오류가 발생한다. </p>\n<h1>2. 해결 방안</h1>\n<h2>2.1. 자릿수 높이기</h2>\n<p>부동 소수점 값에 100, 1000 등의 값을 곱하여 반올림 한 후 (필요한 만큼), <code class=\"language-text\">%</code> 연산자를 사용한다.</p>\n<h2>2.2. fmod 함수 사용</h2>\n<p><code class=\"language-text\">fmod</code> 함수는 <code class=\"language-text\">math.h</code> 라이브러리에 정의되어있다.</p>\n<ul>\n<li>\n<p><code class=\"language-text\">double fmod(double x, double y)</code></p>\n<ul>\n<li>\"x/y 의 부동 소수점 나머지\"를 리턴한다.</li>\n<li>y == 0 이거나 x/y로 인해 오버플로우가 발생한다면 0을 리턴한다.</li>\n</ul>\n</li>\n</ul>","frontmatter":{"date":"2020-10-16","title":"[C/C++] fmod: 부동 소수점 값에 대한 나머지 연산","tags":["C/C++"]},"fields":{"slug":"/pages/2020-10-16-c_cpp_fmod"}}},"pageContext":{"slug":"/pages/2020-10-16-c_cpp_fmod"}},"staticQueryHashes":["1073894666","554375791"]}