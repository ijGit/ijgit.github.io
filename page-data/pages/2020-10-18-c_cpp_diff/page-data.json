{"componentChunkName":"component---src-templates-post-jsx","path":"/pages/2020-10-18-c_cpp_diff","result":{"data":{"site":{"siteMetadata":{"title":"ij.Log"}},"markdownRemark":{"html":"<h1 id=\"1-c와-c의-주요-차이점\" style=\"position:relative;\"><a href=\"#1-c%EC%99%80-c%EC%9D%98-%EC%A3%BC%EC%9A%94-%EC%B0%A8%EC%9D%B4%EC%A0%90\" aria-label=\"1 c와 c의 주요 차이점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. C와 C++의 주요 차이점</h1>\n<ol>\n<li>Cpp은 일종의 C 상위 집합으로 몇가지 예외를 제외한 대부분의 C 프로그램은 Cpp에서도 동작한다.</li>\n<li>C는 절차적 프로그래밍 언어이지만, C++은 절차적 프로그래밍과 객체 지향 프로그래밍을 모두 지원한다.</li>\n<li>C++은 언어 수준에서 예외 처리를 지원한다. C 예외처리는 전통적 방식인 <code class=\"language-text\">if-else</code> 스타일로 수행된다.</li>\n<li>C++ 는 참조를 지원하나 C는 지원하지 않는다.</li>\n</ol>\n<h2 id=\"참조와-포인터의-차이점\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EC%A1%B0%EC%99%80-%ED%8F%AC%EC%9D%B8%ED%84%B0%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90\" aria-label=\"참조와 포인터의 차이점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참조와 포인터의 차이점</h2>\n<p>참조는 포인터보다 할 수 있는 것이 더 적다. 하지만 프로그래밍에서 이렇게 제한이 되어있다는 것은 더 안전하고 사용이 쉽다는 것을 의미한다.</p>\n<h4 id=\"참조는-포인터보다-기능이-적다\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EC%A1%B0%EB%8A%94-%ED%8F%AC%EC%9D%B8%ED%84%B0%EB%B3%B4%EB%8B%A4-%EA%B8%B0%EB%8A%A5%EC%9D%B4-%EC%A0%81%EB%8B%A4\" aria-label=\"참조는 포인터보다 기능이 적다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참조는 포인터보다 기능이 적다</h4>\n<ul>\n<li>참조는 재 참조를 할 수 없다. 즉 한번 다른 객체를 참조하게 되면 나중에 다른 객체를 참조하도록 만들 수 없다.</li>\n<li>참조는 <code class=\"language-text\">null</code> 일 수 없다.</li>\n<li>참조는 선언시 초기화해야한다.</li>\n</ul>\n<p>위의 제한으로 C++의 참조는 Linked List등과 같은 데이터 구조를 구현하는 데에 사용될 수 없다. Java 에서 참조는 위의 제한이 없으며 모든 데이터 구조를 표현하는 데에 쓰일 수 있기 때문에 Java에 포인터가 없다고 한다.</p>\n<h4 id=\"참조가-더-안전하고-사용하기-쉽다\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EC%A1%B0%EA%B0%80-%EB%8D%94-%EC%95%88%EC%A0%84%ED%95%98%EA%B3%A0-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-%EC%89%BD%EB%8B%A4\" aria-label=\"참조가 더 안전하고 사용하기 쉽다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참조가 더 안전하고 사용하기 쉽다.</h4>\n<ul>\n<li>참조는 선언시 초기화되어야 하므로 와일드 참조가 존재할 가능성이 적어진다.</li>\n<li>\n<p>참조는 값에 액세스 하기 위해 역 참조 연산자가 필요하지 않고 일반 변수처럼 사용할 수 있다.</p>\n<ul>\n<li><code class=\"language-text\">&amp;</code> 연산자는 선언지에만 필요하다.</li>\n<li>객체의 멤버에 액세스 할때에는 <code class=\"language-text\">&gt;</code>가 아니라 <code class=\"language-text\">.</code>로 액세스할 수 있다.</li>\n</ul>\n</li>\n</ul>","excerpt":"1. C와 C++의 주요 차이점 Cpp은 일종의 C 상위 집합으로 몇가지 예외를 제외한 대부분의 C 프로그램은 Cpp에서도 동작한다. C는 절차적 프로그래밍 언어이지만, C++은 절차적 프로그래밍과 객체 지향 프로그래밍을 모두 지원한다. C…","frontmatter":{"date":"2020-10-16","title":"[C/C++] C와 C++의 차이점","tags":["C/C++","for_interview"],"keywords":["C/C++ Difference"]},"fields":{"slug":"/pages/2020-10-18-c_cpp_diff"},"tableOfContents":"<ul>\n<li>\n<p><a href=\"/pages/2020-10-18-c_cpp_diff/#1-c%EC%99%80-c%EC%9D%98-%EC%A3%BC%EC%9A%94-%EC%B0%A8%EC%9D%B4%EC%A0%90\">1. C와 C++의 주요 차이점</a></p>\n<ul>\n<li><a href=\"/pages/2020-10-18-c_cpp_diff/#%EC%B0%B8%EC%A1%B0%EC%99%80-%ED%8F%AC%EC%9D%B8%ED%84%B0%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90\">참조와 포인터의 차이점</a></li>\n</ul>\n</li>\n</ul>"}},"pageContext":{"slug":"/pages/2020-10-18-c_cpp_diff"}},"staticQueryHashes":["1073894666","694178885"]}