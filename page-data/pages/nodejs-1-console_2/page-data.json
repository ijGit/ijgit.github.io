{"componentChunkName":"component---src-templates-post-js","path":"/pages/nodejs-1-console_2","result":{"data":{"markdownRemark":{"html":"<h2>console.time</h2>\n<ul>\n<li><code class=\"language-text\">console.time([label])</code>: 실행시간을 계산하는 데 사용할 수 있는 타이머를 시작 </li>\n<li><code class=\"language-text\">console.timeEnd([label])</code>: 이전에 호출한 <code class=\"language-text\">console.time()</code> 으로 실행된 타이머를 중지하고 결과를 <code class=\"language-text\">stdout</code>으로 출력</li>\n<li><code class=\"language-text\">console.timeLog([label][, ...data])</code>: 이전에 호출한 <code class=\"language-text\">console.time()</code>의 경과 시간 및 <code class=\"language-text\">data</code> 인수를 출력한다.</li>\n</ul>\n<p>타이머는 고유한 <code class=\"language-text\">label</code> (기본값: <code class=\"language-text\">default</code>) 를 사용한다. 같은 <code class=\"language-text\">label</code>을 사용하여 <code class=\"language-text\">console.timeEnd()</code>를 호출하면 타이머를 멈추고 시간을 출력한다. </p>\n<h2>코드 실행시간 체크</h2>\n<h6>code</h6>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token string\">'time-log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Node.js console.time'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">1000</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">%</span><span class=\"token number\">100</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">timeLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">'time-log'</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\\t\\ti=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>i<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  result <span class=\"token operator\">+=</span> i<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">timeEnd</span><span class=\"token punctuation\">(</span><span class=\"token string\">'time-log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">1-1000 duration sum result: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>result<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h6>result</h6>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\">time-log: <span class=\"token number\">0</span>.231ms\n<span class=\"token number\">1</span>-1000 duration <span class=\"token function\">sum</span> result: <span class=\"token number\">499500</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>","frontmatter":{"date":"2020-12-07","title":"[Node.js] console 실행시간 체크","tags":["Node.js"]},"fields":{"slug":"/pages/nodejs-1-console_2"}}},"pageContext":{"slug":"/pages/nodejs-1-console_2"}},"staticQueryHashes":["1073894666","554375791"]}