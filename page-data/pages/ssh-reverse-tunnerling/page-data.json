{"componentChunkName":"component---src-templates-post-jsx","path":"/pages/ssh-reverse-tunnerling","result":{"data":{"site":{"siteMetadata":{"title":"ij.Log"}},"markdownRemark":{"html":"<p>외부에서 접속이 불가능한 PC 로 원격 접속을 하려고 하면, reverse tunnerling 이 필요하다. </p>\n<p>즉 reverse tunnerling을 통해 외부에서 접속이 불가능한 PC <code class=\"language-text\">A</code>와, 외부에 있는 PC    <code class=\"language-text\">B</code>가 있을 때, B가 A로 접속을 할 수 있다.</p>\n<ul>\n<li><code class=\"language-text\">A</code>: 외부에서 접속이 불가능한 PC</li>\n<li><code class=\"language-text\">B</code>: 외부에 있는 PC </li>\n</ul>\n<br/>\n  \n<p>reverse tunnerling 절차는 다음과 같다.</p>\n<p><strong>1. <code class=\"language-text\">A</code> 에서 ssh 를 통해 <code class=\"language-text\">B</code> 로 reverse tunnel 를 열어준다.</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">user_A$ <span class=\"token function\">ssh</span> -R <span class=\"token variable\">${B의 터널링 포트}</span>:localhost:<span class=\"token variable\">${A의 터널링 포트}</span> <span class=\"token variable\">${B의 계정}</span>@<span class=\"token variable\">${B의 도메인<span class=\"token operator\">,</span> 또는 ip}</span> -p<span class=\"token variable\">${B의 ssh 포트}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<ul>\n<li>B의 터널링 포트: B에 열릴 포트, </li>\n<li>A의 터널링 포트: B와 연결 될 A의 포트</li>\n</ul>\n<br/>\n<p>예를 들어 아래와 같이 명령어를 입력하면, <code class=\"language-text\">A</code> 에서 111.111.11.1 의 PC 에 port 22로 ssh 접속을 시도한다. 접속이 성공한다면, 111.111.11.1 의 PC  에서 port 1234로 접속을 할 때, <code class=\"language-text\">A</code> 의 port 22로 접속을 할 수 있다. </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">user_A$ <span class=\"token function\">ssh</span> -R <span class=\"token number\">1234</span>:localhost:22 test@111.111.11.1 -p:22</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<br/>\n<br/>\n<p><strong>2. 위의 과정을 거치면 <code class=\"language-text\">B</code>에서 <code class=\"language-text\">B</code> 의 터널링 포트로 접속했을 때, <code class=\"language-text\">A</code> 의 터널링 포트로 연결된다.</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">user_B$ <span class=\"token function\">ssh</span> localhost -p <span class=\"token variable\">${B의 터널링 포트}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>","excerpt":"외부에서 접속이 불가능한 PC 로 원격 접속을 하려고 하면, reverse tunnerling 이 필요하다.  즉 reverse tunnerling을 통해 외부에서 접속이 불가능한 PC 와, 외부에 있는 PC    가 있을 때, B가 A…","frontmatter":{"date":"2021-11-16","title":"SSH: 리버스 터널링","tags":["network","dev env"],"keywords":null},"fields":{"slug":"/pages/ssh-reverse-tunnerling"},"tableOfContents":""}},"pageContext":{"slug":"/pages/ssh-reverse-tunnerling"}},"staticQueryHashes":["2827402515","694178885"]}