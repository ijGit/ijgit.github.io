{"version":3,"sources":["webpack:///./src/templates/category-page.js"],"names":["Template","data","posts","allMarkdownRemark","site","siteData","edges","map","post","className","key","node","id","to","fields","slug","frontmatter","title","date","category","tags","excerpt","pageQuery"],"mappings":"2FAAA,2IASe,SAASA,EAAT,GAA8B,IAAD,IAAVC,YAAU,MAAJ,GAAI,EACjBC,EAASD,EAA3BE,kBACAC,EAAQH,EAARG,KAEP,OACI,YAAC,IAAD,CAAQC,SAAUD,GAElB,kCAECF,EAAMI,MAAMC,KAAI,SAAAC,GAAI,OACnB,mBAAKC,UAAU,YAAYC,IAAOF,EAAKG,KAAKC,IAC1C,mBAAKH,UAAU,mBACb,sBAAI,YAAC,OAAD,CAAMI,GAAIL,EAAKG,KAAKG,OAAOC,MAA3B,IAAmCP,EAAKG,KAAKK,YAAYC,SAE/D,mBAAKR,UAAU,kBACb,wBAAOD,EAAKG,KAAKK,YAAYE,MAC7B,wBAAOV,EAAKG,KAAKK,YAAYG,UAC7B,wBAAOX,EAAKG,KAAKK,YAAYI,OAG/B,mBAAKX,UAAU,qBACZD,EAAKG,KAAKU,cAQhB,IAAMC,EAAS","file":"component---src-templates-category-page-js-9aac940a6c2f8ce8e25f.js","sourcesContent":["// src/template/category-page.js\n\nimport React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport { Layout } from '../components/layout/layout';\n/*\ndata come from graphQL query then can be\nrendered in our template\n*/\nexport default function Template({data =[]}){\n  const {allMarkdownRemark:posts} = data; \n  const {site} = data;\n\n  return (\n      <Layout siteData={site}>\n\n      <h1>category</h1>\n\n      {posts.edges.map(post =>(\n        <div className=\"post-item\" key = {post.node.id}>\n          <div className=\"post-item-title\">\n            <h3><Link to={post.node.fields.slug}> {post.node.frontmatter.title}</Link></h3>\n          </div>\n          <div className=\"post-item-meta\">\n            <span>{post.node.frontmatter.date}</span>\n            <span>{post.node.frontmatter.category}</span>\n            <span>{post.node.frontmatter.tags}</span>\n          </div>\n\n          <div className=\"post-item-excerpt\">\n            {post.node.excerpt}\n          </div>\n        </div>\n      ))}\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query categoryQuery($eq: String) {\n    site {\n      siteMetadata {\n        title\n        url\n      }\n      pathPrefix\n    }\n    allMarkdownRemark(limit: 1000, sort: {fields: frontmatter___date, order: DESC}, \n      filter: {frontmatter: {category: {eq: $eq }, type: {ne: \"category\"}}}) {\n      edges{\n        node{\n          id\n          frontmatter {\n            category\n            date(formatString: \"YYYY-MM-DD\")\n            tags\n            title\n          }\n          excerpt(pruneLength: 100)\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}